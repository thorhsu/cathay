<?xml version="1.0" encoding="UTF-8"?> 
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
    
    <bean id="constant" class="com.fxdms.cathy.conf.Constant" lazy-init="default">
        <!-- 傳入afp file的地方 -->        
	    <property name="afpFolder" value="d:/ftphome/" />
	    <property name="voService"  >
	       <ref bean="voServiceProxy"/>
	    </property>
	</bean>    
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource" destroy-method="close">
		<property name="alias" value="connectionPool" />
		<property name="driver" value="net.sourceforge.jtds.jdbc.Driver" />
		<property name="driverUrl" value="jdbc:jtds:sqlserver://tpedbs001lv:1433/cathay" />

		<property name="user" value="Cathay_TW_user" />  
		<property name="password" value="p0part123" />
		<!-- 自動偵察各個連線狀態的時間間隔(毫秒)，偵測到空閒連線即回收，超時即摧毀 -->
		<property name="houseKeepingSleepTime" value="30000" /> 
		<property name="maximumConnectionLifetime" value="1800000" /> 
		<property name="maximumActiveTime" value="1200000" />
		 <!--最少保持的空閒連線數-->
		<property name="prototypeCount" value="5" />
		<!-- 允許最大連線數,超過此連線數，若還有請求時，則排在佇列中 -->
		<property name="maximumConnectionCount" value="10" />
		<!-- 最小連線數 -->
		<property name="minimumConnectionCount" value="1" />
		<!-- 最大的等待請求數，即因没有空閒連接可分配而在佇列等候的最大請求數，超過此數量的用户連接將不會被接受 -->      
        <property name="simultaneousBuildThrottle" value="20" />
		<property name="houseKeepingTestSql" value="select getdate()"/>
	</bean>
	<bean id="sessionFactory"  
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> 
        <property name="dataSource"> 
            <ref bean="dataSource"/> 
        </property> 
        <property name="annotatedClasses">
        <!-- 對應的vo類別 -->
			<list>
				<value>com.salmat.pas.vo.AfpFile</value>
			    <value>com.salmat.pas.vo.ApplyData</value>
				<value>com.salmat.pas.vo.ImgFile</value>
				<value>com.salmat.pas.vo.Properties</value>
				<value>com.salmat.pas.vo.ErrorReport</value>
				<value>com.salmat.pas.vo.SysLog</value>
				<value>com.salmat.pas.vo.Area</value>
				<value>com.salmat.pas.vo.PackStatus</value>
			</list>
        </property>
        <!--此處用來定義hibernate的SessionFactory屬性 -->
	    <property name="hibernateProperties">
	        <props>
	            <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
	            <prop key="hibernate.show_sql">true</prop>
	            <prop key="hibernate.cache.use_query_cache">true</prop>
	            <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.use_outer_join">true</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="hibernate.connection.autocommit">true</prop>
            </props> 
        </property>
    </bean>
    <!-- Transaction Manager -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <!-- HibernateTransactionManager bean需要注入SessionFactory bean的引用-->
        <property name="sessionFactory" ref="sessionFactory"/>
   		<property name="nestedTransactionAllowed"><value>true</value></property>
		<property name="rollbackOnCommitFailure"><value>true</value></property>
    </bean>
	<bean id="hibernateTemplate"
		class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
	</bean>
	<bean id="hibernateSessionFactory"
		class="com.fxdms.util.HibernateSessionFactory">
		<property name="hibernateTemplate">
            <ref bean="hibernateTemplate"/>
        </property>
	</bean>
    <bean id="voServiceProxy"
		class="com.fxdms.cathy.vo.impl.VoServiceImpl" />
    
	
	
	
	<bean id="SchedulerService" class="com.fxdms.cathy.task.SchedulerService" />
	<bean autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">   
	        <property name="triggers">   
	            <list>    
	                <ref local="cronTrigger_Task_AfpListener" />
	                <ref local="cronTrigger_Task_DeleteFileAndZip" />
	            </list>   
	        </property>
	</bean>     	
	<!-- 每五分鐘做一次 -->
	<bean id="cronTrigger_Task_AfpListener"
	   class="org.springframework.scheduling.quartz.CronTriggerBean">
	   <property name="jobDetail" ref="Task_AfpListener" />
	   <property name="cronExpression" value="0 * * * * ?" /> 
	</bean>
	<bean id="Task_AfpListener" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	   <property name="targetObject" ref="SchedulerService"/>
	   <property name="targetMethod" value="afpListener"/> 
	</bean>
	
	<!-- 每天下午五點做一次 -->
	<bean id="cronTrigger_Task_DeleteFileAndZip"
	   class="org.springframework.scheduling.quartz.CronTriggerBean">
	   <property name="jobDetail" ref="Task_DeleteFileAndZip" />
	   <property name="cronExpression" value="0 30 17 * * ?" /> 
	</bean>
	<bean id="Task_DeleteFileAndZip" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	   <property name="targetObject" ref="SchedulerService"/>
	   <property name="targetMethod" value="deleteFileAndZip"/> 
	</bean>

</beans>